# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Andrey Sorokin
# This file is distributed under the same license as the TRegExpr package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
# Translators:
# Andrey Sorokin <filbert@yandex.ru>, 2019
msgid ""
msgstr ""
"Project-Id-Version: TRegExpr 0.952\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-01 07:42+0300\n"
"PO-Revision-Date: 2024-03-09 14:01+0000\n"
"Last-Translator: gallegonovato <fran-carro@hotmail.es>\n"
"Language-Team: Spanish <https://hosted.weblate.org/projects/tregexpr/faq/es/>"
"\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.3.4\n"

# 420897fb25af4c7b8320dec8b9bf7c95
#: ../../faq.rst:6
msgid "English"
msgstr "Inglés"

# 7bea544eb2d240dabc78f1f77a1063d6
#: ../../faq.rst:7
msgid "`Русский <https://regex.sorokin.engineer/ru/latest/faq.html>`__"
msgstr "`Ruso <https://regex.sorokin.engineer/ru/latest/faq.html>`__"

# b0f7d1abc0e7422a94b4301d22eb385b
#: ../../faq.rst:8
msgid "`Deutsch <https://regex.sorokin.engineer/de/latest/faq.html>`__"
msgstr "`Alemán <https://regex.sorokin.engineer/de/latest/faq.html>`__"

# 841f2d0c2dcf4d35aa373e643f5340ae
#: ../../faq.rst:9
msgid "`Български <https://regex.sorokin.engineer/bg/latest/faq.html>`__"
msgstr "`Búlgaro <https://regex.sorokin.engineer/bg/latest/faq.html>`__"

# 456ebf6951114172ab25b45ff17c5ead
#: ../../faq.rst:10
msgid "`Français <https://regex.sorokin.engineer/fr/latest/faq.html>`__"
msgstr "`Francés <https://regex.sorokin.engineer/fr/latest/faq.html>`__"

# 8f281f02d09140e882d4e5e505d8bae2
#: ../../faq.rst:11
msgid "`Español <https://regex.sorokin.engineer/es/latest/faq.html>`__"
msgstr "`Español <https://regex.sorokin.engineer/es/latest/faq.html>`__"

# 752926408a55400c8e44b907548c2349
#: ../../faq.rst:14
msgid "FAQ"
msgstr "Preguntas más frecuentes"

# f2daa8af18924db0ad38224e1a7faca5
#: ../../faq.rst:17
msgid "I found a terrible bug: TRegExpr raises Access Violation exception!"
msgstr ""
"Encontré un error grave: ¡TRegExpr genera la excepción de violación de "
"acceso!"

# 26f438db66e247e488f4348a15590b30
# 77971200a97946b6b238c0736270945d
# f508863794fe4e53b260e12b0ac89b5a
# 80187db49b0b46b3a6ee48158fd42bba
# 8a4cae71dfd949d3ad31696e7907a127
# 293f6243d22143d489329923e2fca878
# f8607cdf08694ad2abfd190a7a9b6ac1
# d8ef20469e4244fbbcde975c75897209
# 62d80bab9af74b41bd449cadfbf74ea8
# 6e16604b5b6f40948ef74c01a559c635
#: ../../faq.rst:19 ../../faq.rst:44 ../../faq.rst:54 ../../faq.rst:70
#: ../../faq.rst:83 ../../faq.rst:103 ../../faq.rst:114 ../../faq.rst:134
#: ../../faq.rst:161 ../../faq.rst:173
msgid "**Answer**"
msgstr "**Responder**"

# 206dad10e1f04a07be8103cc18f6264b
#: ../../faq.rst:21
msgid ""
"You must create the object before usage. So, after you declared something"
" like:"
msgstr ""
"Debe crear el objeto antes de su uso. Entonces, después de que declaraste"
" algo como:"

# 521a3113332e4620b61570186261cef2
#: ../../faq.rst:24
msgid "r : TRegExpr"
msgstr "r: TRegExpr"

# 285f6ff79ebe43a58dff6207e0393369
#: ../../faq.rst:28
msgid "do not forget to create the object instance:"
msgstr "No te olvides de crear la instancia de objeto:"

# 167995716d7249a09736f89026859927
#: ../../faq.rst:30
msgid "r := TRegExpr.Create."
msgstr "r: = TRegExpr.Create."

# eb540de059bd43ba91837ae4ce920424
#: ../../faq.rst:35
msgid "Regular expressions with (?=...) do not work"
msgstr "Las expresiones regulares con (? = ...) no funcionan"

# 193311055f3a48d28aa133561764c44d
#: ../../faq.rst:37
msgid ""
"Look ahead is not implemented in the TRegExpr. But in many cases you can "
"easily `replace it with simple subexpressions "
"<regular_expressions.html#lookahead>`_."
msgstr ""
"Mirar al futuro no está implementado en el TRegExpr. Pero en muchos casos"
" puede `reemplazarlo fácilmente con subexpresiones simples "
"<regular_expressions.html#lookahead>`_."

# 97d85620e543485a809cdb0b6fe0d853
#: ../../faq.rst:42
msgid "Does it support Unicode?"
msgstr "¿Es compatible con Unicode?"

# 887d637ff8ab470a809e1a032b5a43ff
#: ../../faq.rst:46
msgid "`How to use Unicode <tregexpr.html#unicode>`__"
msgstr "`Cómo usar Unicode <tregexpr.html#unicode>`__"

# 2ccc0e6d7c8d4eec8cbdc4bf0823b534
#: ../../faq.rst:49
msgid "Why does TRegExpr return more then one line?"
msgstr "¿Por qué TRegExpr devuelve más de una línea?"

# b77841418b664374bcf4e405134a2cc1
#: ../../faq.rst:51
msgid ""
"For example, r.e. ``<font .\\*>`` returns the first ``<font``, then the "
"rest of the file including last ``</html>``."
msgstr ""
"Por ejemplo, r.e. ``<font .\\*>`` devuelve la primera ``<font``, luego el "
"resto del fichero incluyendo la última ``</html>``."

# c260c550f14d42e2acc808a1c3188ce0
#: ../../faq.rst:56
msgid ""
"For backward compatibility, `modifier /s "
"<regular_expressions.html#modifier_s>`__ is ``On`` by default."
msgstr ""
"Para compatibilidad con versiones anteriores, `modificador / s "
"<regular_expressions.html#modifier_s>`__ es` `On`` por defecto."

# c45c18032a9345928a77bd43a8a8dae0
#: ../../faq.rst:59
msgid ""
"Switch it Off and ``.`` will match any but `Line separators "
"<regular_expressions.html#syntax_line_separators>`__ - exactly as you "
"wish."
msgstr ""
"Apáguelo y ``.`` coincidirá con cualquiera, excepto con `Separadores de "
"línea <regular_expressions.html#syntax_line_separators>`__ - exactamente "
"como lo deseas."

# 3249cfd08df34091a829e5182ecd38fe
#: ../../faq.rst:62
msgid "BTW I suggest ``<font ([^\\n>]*)>``, in ``Match[1]`` will be the URL."
msgstr ""
"Por cierto, recomiendo `` <font ([^\\n"
">] *)> ``, en `` Match [1] `` se convierte en la URL.</font>."

# 26323d71542949ca9eeeb5a8e2e99f0c
#: ../../faq.rst:65
msgid "Why does TRegExpr return more then I expect?"
msgstr "¿Por qué TRegExpr regresa más de lo que esperaba?"

# a9365ad0638a41d982349828378e463b
#: ../../faq.rst:67
msgid ""
"For example r.e. ``<p>(.+)</p>`` applyed to string ``<p>a</p><p>b</p>`` "
"returns ``a</p><p>b`` but not ``a`` as I expected."
msgstr ""
"Por ejemplo re `` <p> (. +) </p> `` aplicado a la cadena `` <p> una "
"</p><p> segundo </p> `` devuelve `` a </p><p> b`` pero no ``a`` como "
"esperaba."

# 52d76eaf92d34fee9e86a07b917a01ba
#: ../../faq.rst:72
msgid ""
"By default all operators works in ``greedy`` mode, so they match as more "
"as it possible."
msgstr ""
"Por defecto, todos los operadores trabajan en modo ``codicioso``, para "
"que coincidan tanto como sea posible."

# f5154b21ae094665be3fc94d43b159c2
#: ../../faq.rst:75
msgid ""
"If you want ``non-greedy`` mode you can use ``non-greedy`` operators like"
" ``+?`` and so on or switch all operators into ``non-greedy`` mode with "
"help of modifier ``g`` (use appropriate TRegExpr properties or operator "
"``?(-g)`` in r.e.)."
msgstr ""
"Si quiere el modo `` no codicioso`` puede usar operadores `` no "
"codiciosos`` como ``+?`` Y así sucesivamente o cambiar todos los "
"operadores al modo `` no codicioso`` con la ayuda del modificador ` `g`` "
"(use las propiedades TRegExpr apropiadas o el operador` `? (- g)` `en "
"re)."

# 7dd2a4d8360a49e3bdb8822df040a2ab
#: ../../faq.rst:81
msgid "How to parse sources like HTML with help of TRegExpr?"
msgstr "Cómo analizar fuentes como HTML con la ayuda de TRegExpr?"

# 90a1c8b6cfdf4eec8d99b78a5f02e436
#: ../../faq.rst:85
msgid "Sorry folks, but it's nearly impossible!"
msgstr "Lo siento amigos, pero es casi imposible!"

# c10b3fda069e412d87d650968a7ca167
#: ../../faq.rst:87
msgid ""
"Of course, you can easily use TRegExpr for extracting some information "
"from HTML, as shown in my examples, but if you want accurate parsing you "
"have to use real parser, not r.e."
msgstr ""
"Por supuesto, puedes usar TRegExpr fácilmente para extraer información de "
"HTML, como se muestra en mis ejemplos, pero si deseas un análisis preciso, "
"necesitas usar un analizador real."

# 9565d64088b445999b49b8f42e7ef392
#: ../../faq.rst:91
msgid ""
"You can read full explanation in Tom Christiansen and Nathan Torkington "
"``Perl Cookbook``, for example."
msgstr ""
"Puede leer la explicación completa en Tom Christiansen y Nathan "
"Torkington `` Perl Cookbook``, por ejemplo."

# a979714a9a114da19f62da5e893dfec5
#: ../../faq.rst:94
msgid ""
"In short - there are many structures that can be easy parsed by real "
"parser but cannot at all by r.e., and real parser is much faster to do "
"the parsing, because r.e. doesn't simply scan input stream, it performs "
"optimization search that can take a lot of time."
msgstr ""
"En resumen, hay muchas estructuras que pueden analizarse fácilmente con "
"un analizador real, pero que no se pueden realizar por completo, y el "
"analizador real es mucho más rápido que el análisis, porque no solo "
"escanea el flujo de entrada, realiza una búsqueda de optimización que "
"puede realizar un montón de tiempo."

# 97ee2ad3977e4ab1a3a1eff016bafbd4
#: ../../faq.rst:101
msgid "Is there a way to get multiple matches of a pattern on TRegExpr?"
msgstr ""
"¿Hay alguna forma de obtener varias coincidencias de un patrón en "
"TRegExpr?"

# 600facc6629740f0a73fe7f26f6a8f35
#: ../../faq.rst:105
msgid "You can iterate matches with ExecNext method."
msgstr "Puede iterar coincidencias con el método ExecNext."

# 7e859115978243a5b33c8f17a8082f99
#: ../../faq.rst:107
msgid ""
"If you want some example, please take a look at ``TRegExpr.Replace`` "
"method implementation or at the examples for `HyperLinksDecorator "
"<demos.html>`_"
msgstr ""
"Si desea algún ejemplo, consulte la implementación del método "
"``TRegExpr.Replace`` o los ejemplos de `HyperLinksDecorator "
"<demos.html>`_"

# b5c024a5edbc4688b1788d005c9b3e6c
#: ../../faq.rst:112
msgid ""
"I am checking user input. Why does TRegExpr return ``True`` for wrong "
"input strings?"
msgstr ""
"Estoy comprobando la entrada del usuario. ¿Por qué TRegExpr devuelve "
"``True`` para las cadenas de entrada incorrectas?"

# 363dd48f528141fb9967c3099e348141
#: ../../faq.rst:116
msgid ""
"In many cases TRegExpr users forget that regular expression is for "
"**search** in input string."
msgstr ""
"En muchos casos, los usuarios de TRegExpr olvidan que la expresión "
"regular es para ** búsqueda ** en la cadena de entrada."

# ad3acde08e0244228a185c3e6c478df6
#: ../../faq.rst:119
msgid ""
"So, for example if you use ``\\d{4,4}`` expression, you will get success "
"for wrong user inputs like ``12345`` or ``any letters 1234``."
msgstr ""
"Entonces, por ejemplo, si usa la expresión `` \\ d {4,4} ``, obtendrá el "
"éxito para las entradas de usuario incorrectas como ``12345`` o `` "
"cualquier letra 1234``."

# 2c47d74864344db19988551ad8ebe20f
#: ../../faq.rst:122
msgid ""
"You have to check from line start to line end to ensure there are no "
"anything else around: ``^\\d{4,4}$``."
msgstr ""
"Debe verificar desde el inicio de la línea hasta el final de la línea "
"para asegurarse de que no haya nada más alrededor: `` ^ \\ d {4,4} $ ``."

# f00c1ac1bcdd42ffbe4b4aa40241387e
#: ../../faq.rst:128
msgid "Why does non-greedy iterators sometimes work as in greedy mode?"
msgstr ""
"¿Por qué los iteradores no codiciosos a veces funcionan como en modo "
"codicioso?"

# 1a121c878b4c4b63b20a749b87bc99ef
#: ../../faq.rst:130
msgid ""
"For example, the r.e. ``a+?,b+?`` applied to string ``aaa,bbb`` matches "
"``aaa,b``, but should it not match ``a,b`` because of non-greediness of "
"first iterator?"
msgstr ""
"Por ejemplo, ¿se aplica r.e. ``a+?b+? `` A la cadena ``aaa,bbb`` coincide"
" con ``aaa,b``, pero no debe coincidir con ``a,b`` debido a la falta de "
"codicia de primer iterador?"

# 879b8747caa64d8fa278504db8fd7d9d
#: ../../faq.rst:136
msgid ""
"This is because of TRegExpr way to work. In fact many others r.e. engines"
" work exactly the same: they performe only ``simple`` search "
"optimization, and do not try to do the best optimization."
msgstr ""
"Esto se debe a la manera de trabajar de TRegExpr. De hecho, muchos otros "
"motores funcionan exactamente de la misma manera: solo realizan la "
"optimización de búsqueda ``simple``, y no intentan hacer la mejor "
"optimización."

# 2b2c4716a2984f6f82a4898689c9869e
#: ../../faq.rst:140
msgid ""
"In some cases it's bad, but in common it's rather advantage then "
"limitation, because of performance and predictability reasons."
msgstr ""
"En algunos casos es malo, pero en general es más una ventaja que una "
"limitación, debido a razones de rendimiento y previsibilidad."

# 61977f1917a0434bb9e1eaa68464d334
#: ../../faq.rst:143
msgid ""
"The main rule - r.e. first of all try to match from current place and "
"only if that's completely impossible move forward by one char and try "
"again from next position in the text."
msgstr ""
"La regla principal es, en primer lugar, tratar de hacer coincidir desde "
"el lugar actual y solo si eso es completamente imposible avanzar una vez "
"e intentar nuevamente desde la siguiente posición en el texto."

# 1023da55f58742beac4fe89b9cce8027
#: ../../faq.rst:147
msgid ""
"So, if you use ``a,b+?`` it'll match ``a,b``. In case of ``a+?,b+?`` it's"
" now not recommended (we add non-greedy modifyer) but still possible to "
"match more then one ``a``, so TRegExpr will do it."
msgstr ""
"Entonces, si usas ``a,b+?`` Coincidirá con ``a,b``. En el caso de "
"``a+?,b+?`` Ahora no se recomienda (agregamos un modificador no "
"codicioso) pero aún es posible que coincida con más de un ``a``, por lo "
"que TRegExpr lo hará."

# 647ede57ab464622bd6b39c99ec24fe9
#: ../../faq.rst:151
msgid ""
"TRegExpr like Perl's or Unix's r.e. doesn't attempt to move forward and "
"check - would it will be \"better\" match. Fisrt of all, just because "
"there is no way to say it's more or less good match."
msgstr ""
"TRegExpr como el de Perl o Unix no intenta avanzar y comprobar, sería "
"&quot;mejor&quot; coincidencia. A decir verdad, solo porque no hay manera"
" de decir que sea más o menos una buena combinación."

# 3b9fe775d8e04ab1b6d9aa67797e4fe2
#: ../../faq.rst:157
msgid "How can I use TRegExpr with Borland C++ Builder?"
msgstr "¿Cómo puedo usar TRegExpr con Borland C ++ Builder?"

# 3a3668dfca184d12a2f22a204d0bea67
#: ../../faq.rst:159
msgid "I have a problem since no header file (``.h`` or ``.hpp``) is available."
msgstr ""
"Tengo un problema porque no hay ningún archivo de encabezado (``.h`` o "
"``.hpp``) disponible."

# eb921fd58b9b44989ad4980de9c1dcb6
#: ../../faq.rst:163
msgid "Add ``RegExpr.pas`` to ``bcb`` project."
msgstr "Agregue ``RegExpr.pas`` al proyecto ``bcb``."

# 7ebb72e486c64aafa405f28a1d9acda7
#: ../../faq.rst:164
msgid "Compile project. This generates the header file ``RegExpr.hpp``."
msgstr "Compilar proyecto. Esto genera el archivo de encabezado ``RegExpr.hpp``."

# 485207ee444e42fbb7546e46f4630c97
#: ../../faq.rst:165
msgid "Now you can write code which uses the ``RegExpr`` unit."
msgstr "Ahora puede escribir código que usa la unidad ``RegExpr``."

# 3ef58f66d6124b679e7e809e6ebb08af
#: ../../faq.rst:166
msgid "Don't forget to add  ``#include “RegExpr.hpp”`` where needed."
msgstr "No olvide agregar `` #include “RegExpr.hpp” `` donde sea necesario."

# 779317d8bb2043b3b83e8c4572b02d0a
#: ../../faq.rst:167
msgid ""
"Don't forget to replace all ``\\`` in regular expressions with ``\\\\`` "
"or redefined `EscChar <tregexpr.html#escchar>`__ const."
msgstr ""
"No se olvide de reemplazar todos los ``\\`` en expresiones regulares con "
"``\\\\`` o redefinido `EscChar <tregexpr.html#escchar>`__ const."

# 8c9f9839a5d545d4be6fb30ae704f77e
#: ../../faq.rst:171
msgid ""
"Why many r.e. (including r.e. from TRegExpr help and demo) work wrong in "
"Borland C++ Builder?"
msgstr ""
"¿Por qué muchos re (incluyendo re desde TRegExpr help y demo) funcionan "
"mal en Borland C ++ Builder?"

# 9168003d88604c71b5fd773dc644e117
#: ../../faq.rst:175
msgid ""
"The hint is in the previous question ;) Symbol ``\\`` has special meaning"
" in ``C++``, so you have to ``escape`` it (as described in previous "
"answer). But if you don't like r.e. like ``\\\\w+\\\\\\\\w+\\\\.\\\\w+`` "
"you can redefine the constant ``EscChar`` (in ``RegExpr.pas``). For "
"example ``EscChar = \"/\"``. Then you can write ``/w+/w+/./w+``, looks "
"unusual but more readable."
msgstr ""
"La sugerencia se encuentra en la pregunta anterior;) El símbolo ``\\`` "
"tiene un significado especial en `` C ++ ``, por lo que tiene que "
"``escapar`` (como se describe en la respuesta anterior). Pero si no te "
"gusta re como ``\\\\w + \\\\\\\\ w + \\\\. \\\\ w + `` puedes redefinir "
"la constante ``EscChar`` (en ``RegExpr.pas``). Por ejemplo `` EscChar = "
"&quot;/&quot; ``. Luego puede escribir `` / w + / w + /. / W + ``, parece"
" inusual pero más legible."

# e2a3dc0c705640788818a205bca41480
#~ msgid "`English <https://regex.sorokin.engineer/en/latest/index.html>`__"
#~ msgstr "`English <https://regex.sorokin.engineer/en/latest/index.html>`__"

# d71401485c1640b29d19998af0548ae7
#~ msgid "Why TRegExpr does not work with strings with #0 inside?"
#~ msgstr ""

# fd3e6f7f17ec417c8ef21374c88dd26e
#~ msgid ""
#~ msgstr ""

# 7317170c1b5148d49eaf5658800b28f1
#~ msgid "Why TRegExpr does not work with regex with #0 inside?"
#~ msgstr ""

# fd3e6f7f17ec417c8ef21374c88dd26e
#~ msgid ""
#~ "The TRegExpr parser does support input"
#~ " strings with #0 chars. The support"
#~ " was added by `Alexey-T "
#~ "<https://github.com/Alexey-T>`__."
#~ msgstr ""

# 9942c7c9068b44179d1618294123cc2a
#~ msgid "But at the moment #0 chars insire regex are not supported."
#~ msgstr ""

# 4a95a45ae6ef45479f620c97dca9223c
#~ msgid ""
#~ "So you can parse text with "
#~ "`#0`-chars inside it but you cannot "
#~ "use regex with `#0`-chars or `\\x00` "
#~ "expression inside."
#~ msgstr ""
